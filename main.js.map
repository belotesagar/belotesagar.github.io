{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/blog/blog.component.ts","./src/app/blog/blog.component.html","./src/app/default-page/default-page.component.ts","./src/app/default-page/default-page.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<br>\n<br>\n<br>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-lg-6 p-5\">\n      <div class=\"jumbotron mx-auto\" style=\"background:#FCE4EC\">\n        <h1 class=\"display-6\">Who I am and what I am doing..!</h1>\n        <p class=\"lead\">Hey,<br> My name is sagar.i am making a weather app where anyone can see latest weather\n          information of any city and get information and compare weather of diffrent city's..</p>\n        <hr class=\"my-4\">\n        <p>It uses OpenWeatherMap API to fetch data.so whatever data is comming from server is a live data.</p>\n        <a mat-raised-button color=\"primary\" routerLink=\"/home\" role=\"button\">Get Started</a>\n      </div>\n    </div>\n    <div class=\"col-lg-6\">\n      <img class=\"img-fluid d-block\" src=\"../../assets/Undraw/undraw_weather_notification_4sbo.png\">\n    </div>\n  </div>\n  <div class=\"jumbotron jumbotron-fluid\" style=\"background:#EEEEEE\">\n    <div class=\"container\">\n      <h1 class=\"display-6\">How I got this idea..?</h1>\n      <p class=\"lead\">I am very enthusiastic for web developement,from some months i am plannig to make a self website\n        using Angular but not getting any idea from where i have to start and I get an idea about weather app. <br>\n        main idea behind this is learn and explore new things and components in web developement. </p>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component'\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { DefaultPageComponent } from './default-page/default-page.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { BlogComponent } from './blog/blog.component';\nimport { AboutComponent } from './about/about.component'\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: \"default\",\n    pathMatch: 'full'\n  },\n  {\n    path: 'default',\n    component: DefaultPageComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'blog',\n    component: BlogComponent\n  },\n  {\n    path: 'about',\n    component: AboutComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'signup',\n    component: SignupComponent\n  },\n  {\n    path: 'footer',\n    component: FooterComponent\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { UserService } from './user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'weather-app';\n  defaultExist: boolean = true;\n  weatherdata: any;\n  constructor(private user: UserService, public dialog: MatDialog) {\n    this.user.getData().subscribe(data => {\n      // console.log(\"data:\", data);\n      this.weatherdata = data;\n    })\n  }\n\n  openDialogLogin() {\n    let dialogref = this.dialog.open(LoginComponent);\n\n    dialogref.afterClosed().subscribe(result => {\n      console.log(`Dialog result:${result}`);\n    })\n\n  }\n\n  openDialog() {\n    let dialogref = this.dialog.open(SignupComponent);\n\n    dialogref.afterClosed().subscribe(result => {\n      console.log(`Dialog result:${result}`);\n    })\n  }\n\n  onSubmit(data) {\n    console.log(\"login-data:\", data);\n  }\n  value: string;\n  submitValue(inputValue: any) {\n    console.log(\"input value:\", inputValue.value);\n    this.value = inputValue.value;\n  }\n  destroy() {\n    this.defaultExist = false;\n  }\n\n}\n","<nav class=\"navbar navbar-dark navbar-expand-lg fixed-top\" style=\"background-color: #3f51b5\">\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\"\n    aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n    <a class=\"navbar-brand\" routerLink=\"default\">Weather-App</a>\n    <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"home\">Home </a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"blog\">Blog</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"about\">About</a>\n      </li>\n    </ul>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <!-- <a routerLink='login'>\n        <button class=\"mr-1\" mat-raised-button color=\"accent\">Login</button>\n      </a>\n      <a routerLink='signup'>\n        <button mat-raised-button color=\"accent\" a>SignUp</button>\n      </a> -->\n      <button class=\"mr-1\" mat-raised-button (click)=\"openDialogLogin()\">Login</button>\n      <button mat-raised-button (click)=\"openDialog()\">SignUp</button>\n    </form>\n  </div>\n</nav>\n<router-outlet></router-outlet>\n<!-- <input type=\"text\" placeholder=\"type input\" #inputValue>\n<button (click)=\"submitValue(inputValue)\">click me</button>\n<app-default-page *ngIf=\"defaultExist\" [myValue]=\"value\">ngContent:{{value}}\n</app-default-page>\n<br>\n<button (click)=\"destroy()\" class=\"btn btn-danger\">destroy</button> -->\n\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FooterComponent } from './footer/footer.component';\nimport { DefaultPageComponent } from './default-page/default-page.component';\nimport { BlogComponent } from './blog/blog.component';\nimport { AboutComponent } from './about/about.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    SignupComponent,\n    PageNotFoundComponent,\n    FooterComponent,\n    DefaultPageComponent,\n    BlogComponent,\n    AboutComponent\n  ],\n  entryComponents: [LoginComponent, SignupComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    FormsModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<br>\n<br>\n<br>\n<h1>working on blog page!</h1>\n","import {\n  Component, OnInit, Input, OnChanges, SimpleChanges, DoCheck, AfterContentInit,\n  AfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy\n} from '@angular/core';\n\n@Component({\n  selector: 'app-default-page',\n  templateUrl: './default-page.component.html',\n  styleUrls: ['./default-page.component.css']\n})\nexport class DefaultPageComponent implements OnInit, OnChanges, DoCheck, AfterContentInit,\n  AfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy {\n\n  constructor() {\n    console.log(`default page constructor called...`);\n  }\n  @Input() myValue = \"sagar\";\n  counter;\n  num: number = 1;\n\n  ngOnInit(): void {\n    console.log(`default page ngOnInit called...`);\n    // this.counter = setInterval(() => {\n    //   this.num = this.num + 1;\n    //   console.log(this.num);\n    // }, 1000)\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    console.log(`default page ngOnChanges called...`);\n    console.log(\"changes:\", changes);\n  }\n  ngDoCheck() {\n    console.log(`default page ngDoCheck called...`);\n  }\n  ngAfterContentInit() {\n    console.log(`default page ngAfterContentInit called...`);\n  }\n  ngAfterContentChecked() {\n    console.log(`default page ngAfterContentChecked called...`);\n  }\n  ngAfterViewInit() {\n    console.log(`default page ngAfterViewInit called...`);\n  }\n  ngAfterViewChecked() {\n    console.log(`default page ngAfterViewChecked called...`);\n  }\n  ngOnDestroy() {\n    console.log(`default page ngOnDestroy called...`);\n    clearInterval(this.counter);\n  }\n}\n","<br>\n<br>\n<br>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-lg-6 p-5\">\n      <div class=\"jumbotron mx-auto\" style=\"background:#FCE4EC\">\n        <h1 class=\"display-4\">Welcome</h1>\n        <p class=\"lead\">This is a simple Weather App,here you can able to see multiple city's\n          temperature in single time and compare them as per your requirement.</p>\n        <hr class=\"my-4\">\n        <p>It uses OpenWeatherMap API to fetch data.so whatever data is comming from server is a live data.</p>\n        <a mat-raised-button color=\"primary\" routerLink=\"/home\" role=\"button\">Get Started</a>\n      </div>\n    </div>\n    <div class=\"col-lg-6\">\n      <img class=\"img-fluid d-block\" src=\"../../assets/Undraw/undraw_weather_d9t2.png\">\n    </div>\n  </div>\n  <div class=\"jumbotron jumbotron-fluid\" style=\"background:#EEEEEE\">\n    <div class=\"container\">\n      <small class=\"display-6\">Daily Weather Quotes</small>\n      <p class=\"lead\">Sunshine is delicious, rain is refreshing, wind braces us up, snow is exhilarating; there is\n        really no such thing as bad weather, only different kinds of good weather.</p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"page-footer font-small p-3\" style=\"background-color: #3f51b5\">\n  <div class=\"container-fluid text-center text-md-left\">\n    <div class=\"row\">\n      <div class=\"col-md-6 mt-md-0 mt-3\">\n        <h5 class=\"\">Weather App</h5>\n        <p>Main Motto Behind Weather App is a Learning API calling and Exploring new things in Angular 10 and Much\n          More Stuff Will be Comming Soon.....!</p>\n      </div>\n      <hr class=\"clearfix w-100 d-md-none pb-3\">\n      <div class=\"col-md-3 mb-md-0 mb-3\">\n        <h5 class=\"\">Documentation</h5>\n        <ul class=\"list-unstyled\">\n          <li>\n            <a href=\"#!\">What is Weather App</a>\n          </li>\n          <li>\n            <a href=\"#!\">How to Start</a>\n          </li>\n          <li>\n            <a href=\"#!\">Requirements</a>\n          </li>\n          <li>\n            <a href=\"#!\">Get Started</a>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-md-3 mb-md-0 mb-3\">\n        <h5 class=\"\">Contact</h5>\n        <ul class=\"list-unstyled\">\n          <li>\n            <a href=\"https://www.linkedin.com/in/sagar-belote-160b4811b\">Linkedin</a>\n          </li>\n          <li>\n            <a href=\"https://www.facebook.com/sagar.belote\">Facebook</a>\n          </li>\n          <li>\n            <a href=\"mailto:sagarbelotes@gmail.com\">Gmail</a>\n          </li>\n          <li>\n            <a href=\"https://join.skype.com/invite/lAi8I7fHkRkH\">Skype</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  <div class=\"footer-copyright text-center py-3\">© 2020 Copyright:Sagar B Belote\n  </div>\n</footer>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n// import { NONAME } from 'dns';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  @Input() hero: object;\n  value1 = 'pune';\n  value2 = 'Clear';\n  value3 = 'Clear';\n  value4 = 'Clear';\n  value5 = 'Clear';\n  value6 = 'Clear';\n  value7 = 'Clear';\n  value8 = 'Clear';\n  value9 = 'Clear';\n  div1: boolean = false;\n  div2: boolean = false;\n  div3: boolean = false;\n  div4: boolean = false;\n  div5: boolean = false;\n  div6: boolean = false;\n  div7: boolean = false;\n  div8: boolean = false;\n  div9: boolean = false;\n  data: any\n  divname: any;\n\n\n  // desc = document.querySelector('.desc');\n\n  boxClicked(value, boxName, description) {\n    console.log(\"clicked\");\n    console.log(\"value:\", value);\n    console.log(\"boxName:\", boxName);\n    var main = document.querySelector('#' + boxName);\n    console.log(\"main:\", main);\n    var temp = document.querySelector('.' + boxName);\n    var desc = document.querySelector('.' + description);\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=' + value + '&appid=66e453fb77b0c0100e8fc74440c56668')\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"@@@@@@@@@@@\", data);\n        this.data = data;\n        var country = data.sys.country;\n        var nameValue = data['name'];\n        var tempValue = data['main']['temp'];\n        var descriptionValue = data.weather[0].description;\n        console.log(\"@@@@@@@@@@@descriptionValue\", descriptionValue);\n        main.innerHTML = country + \" \" + nameValue;\n        temp.innerHTML = \"Temp - \" + tempValue + \"<br>\";\n        desc.innerHTML = \"Description - \" + descriptionValue;\n      })\n\n      .catch(err => alert(\"wrong city name,please retry with correct city name\"));\n\n  }\n  showDiv(idd: any) {\n    console.log(\"idd\", idd);\n    let val: any\n    if (idd == \"div1\") {\n      val = document.getElementById(\"hide1\");\n      val.style.display = 'none';\n      this.div1 = true;\n    }\n    else if (idd == \"div2\") {\n      val = document.getElementById(\"hide2\");\n      val.style.display = 'none';\n      this.div2 = true;\n    }\n    else if (idd == \"div3\") {\n      val = document.getElementById(\"hide3\");\n      val.style.display = 'none';\n      this.div3 = true;\n    }\n    else if (idd == \"div4\") {\n      val = document.getElementById(\"hide4\");\n      val.style.display = 'none';\n      this.div4 = true;\n    }\n    else if (idd == \"div5\") {\n      val = document.getElementById(\"hide5\");\n      val.style.display = 'none';\n      this.div5 = true;\n    }\n    else if (idd == \"div6\") {\n      val = document.getElementById(\"hide6\");\n      val.style.display = 'none';\n      this.div6 = true;\n    }\n    else if (idd == \"div7\") {\n      val = document.getElementById(\"hide7\");\n      val.style.display = 'none';\n      this.div7 = true;\n    }\n    else if (idd == \"div8\") {\n      val = document.getElementById(\"hide8\");\n      val.style.display = 'none';\n      this.div8 = true;\n    }\n    else {\n      val = document.getElementById(\"hide9\");\n      val.style.display = 'none';\n      this.div9 = true;\n    }\n    // this.divname = idd;\n    // console.log(\"@@:\", this.divname);\n    // this.divname = true;\n  }\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n","<div class=\"container fluid\">\n  <div class=\"row p-2 mt-5\">\n    <div class=\"col-sm p-2 m-2\" id=\"block1\" style=\"height: 200px;\" (click)=\"showDiv('div1')\">\n      <h3 id=\"hide1\">Click Here to watch Weather of your City..</h3>\n      <div class=\"row\" *ngIf=\"div1\">\n        <div class=\"col-sm-8\">\n          <mat-form-field class=\"example-form-field\">\n            <mat-label>Enter City</mat-label>\n            <input matInput type=\"text\" [value]=\"value1\" [(ngModel)]=\"value1\">\n            <button mat-button *ngIf=\"value1\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value1=''\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4 mx-auto mt-3\">\n          <button mat-flat-button color=\"primary\" (click)=\"boxClicked(value1,'value1','description1')\">Show</button>\n        </div>\n      </div>\n      <h4 id=\"value1\"></h4>\n      <small class=\"value1\"></small>\n      <small class=\"description1\"></small>\n    </div>\n    <div class=\"col-sm p-2 m-2\" style=\"height: 200px; background-color: #C5CAE9;\" (click)=\"showDiv('div2')\">\n      <h3 id=\"hide2\">Click Here to watch Weather of your City..</h3>\n      <div class=\"row\" *ngIf=\"div2\">\n        <div class=\"col-sm-8\">\n          <mat-form-field class=\"example-form-field\">\n            <mat-label>Enter City</mat-label>\n            <input matInput type=\"text\" [value]=\"value2\" [(ngModel)]=\"value2\">\n            <button mat-button *ngIf=\"value2\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value2=''\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4 mx-auto mt-3\">\n          <button mat-flat-button color=\"primary\" (click)=\"boxClicked(value2,'value2','description2')\">Show</button>\n        </div>\n      </div>\n      <h4 id=\"value2\"></h4>\n      <small class=\"value2\"></small>\n      <small class=\"description2\"></small>\n\n    </div>\n    <div class=\"col-sm p-2 m-2\" style=\"height: 200px; background-color:#C5CAE9;\" (click)=\"showDiv('div3')\">\n      <h3 id=\"hide3\">Click Here to watch Weather of your City..</h3>\n      <div class=\"row\" *ngIf=\"div3\">\n        <div class=\"col-sm-8\">\n          <mat-form-field class=\"example-form-field\">\n            <mat-label>Enter City</mat-label>\n            <input matInput type=\"text\" [value]=\"value3\" [(ngModel)]=\"value3\">\n            <button mat-button *ngIf=\"value3\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value3=''\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4 mx-auto mt-3\">\n          <button mat-flat-button color=\"primary\" (click)=\"boxClicked(value3,'value3','description3')\">Show</button>\n        </div>\n      </div>\n      <h4 id=\"value3\"></h4>\n      <small class=\"value3\"></small>\n      <small class=\"description3\"></small>\n    </div>\n  </div>\n\n  <div class=\"row p-2\">\n    <div class=\"col-sm p-2 m-2\" style=\"height: 200px; background-color:#C5CAE9;\" (click)=\"showDiv('div4')\">\n      <h3 id=\"hide4\">Click Here to watch Weather of your City..</h3>\n      <div class=\"row\" *ngIf=\"div4\">\n        <div class=\"col-sm-8\">\n          <mat-form-field class=\"example-form-field\">\n            <mat-label>Enter City</mat-label>\n            <input matInput type=\"text\" [value]=\"value4\" [(ngModel)]=\"value4\">\n            <button mat-button *ngIf=\"value4\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value4=''\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4 mx-auto mt-3\">\n          <button mat-flat-button color=\"primary\" (click)=\"boxClicked(value4,'value4','description4')\">Show</button>\n        </div>\n      </div>\n      <h4 id=\"value4\"></h4>\n      <small class=\"value4\"></small>\n      <small class=\"description4\"></small>\n    </div>\n    <div class=\"col-sm p-2 m-2\" style=\"height: 200px; background-color:#C5CAE9;\" (click)=\"showDiv('div5')\">\n      <h3 id=\"hide5\">Click Here to watch Weather of your City..</h3>\n      <div class=\"row\" *ngIf=\"div5\">\n        <div class=\"col-sm-8\">\n          <mat-form-field class=\"example-form-field\">\n            <mat-label>Enter City</mat-label>\n            <input matInput type=\"text\" [value]=\"value5\" [(ngModel)]=\"value5\">\n            <button mat-button *ngIf=\"value5\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value5=''\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4 mx-auto mt-3\">\n          <button mat-flat-button color=\"primary\" (click)=\"boxClicked(value5,'value5','description5')\">Show</button>\n        </div>\n      </div>\n      <h4 id=\"value5\"></h4>\n      <small class=\"value5\"></small>\n      <small class=\"description5\"></small>\n    </div>\n    <div class=\"col-sm p-2 m-2\" style=\"height: 200px; background-color:#C5CAE9;\" (click)=\"showDiv('div6')\">\n      <h3 id=\"hide6\">Click Here to watch Weather of your City..</h3>\n      <div class=\"row\" *ngIf=\"div6\">\n        <div class=\"col-sm-8\">\n          <mat-form-field class=\"example-form-field\">\n            <mat-label>Enter City</mat-label>\n            <input matInput type=\"text\" [value]=\"value6\" [(ngModel)]=\"value6\">\n            <button mat-button *ngIf=\"value6\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value6=''\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4 mx-auto mt-3\">\n          <button mat-flat-button color=\"primary\" (click)=\"boxClicked(value6,'value6','description6')\">Show</button>\n        </div>\n      </div>\n      <h4 id=\"value6\"></h4>\n      <small class=\"value6\"></small>\n      <small class=\"description6\"></small>\n    </div>\n  </div>\n\n  <div class=\"row p-2\">\n    <div class=\"col-sm p-2 m-2\" style=\"height: 200px; background-color: #C5CAE9;\" (click)=\"showDiv('div7')\">\n      <h3 id=\"hide7\">Click Here to watch Weather of your City..</h3>\n      <div class=\"row\" *ngIf=\"div7\">\n        <div class=\"col-sm-8\">\n          <mat-form-field class=\"example-form-field\">\n            <mat-label>Enter City</mat-label>\n            <input matInput type=\"text\" [value]=\"value7\" [(ngModel)]=\"value7\">\n            <button mat-button *ngIf=\"value7\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value7=''\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4 mx-auto mt-3\">\n          <button mat-flat-button color=\"primary\" (click)=\"boxClicked(value7,'value7','description7')\">Show</button>\n        </div>\n      </div>\n      <h4 id=\"value7\"></h4>\n      <small class=\"value7\"></small>\n      <small class=\"description7\"></small>\n    </div>\n    <div class=\"col-sm p-2 m-2\" style=\"height: 200px; background-color: #C5CAE9;\" (click)=\"showDiv('div8')\">\n      <h3 id=\"hide8\">Click Here to watch Weather of your City..</h3>\n      <div class=\"row\" *ngIf=\"div8\">\n        <div class=\"col-sm-8\">\n          <mat-form-field class=\"example-form-field\">\n            <mat-label>Enter City</mat-label>\n            <input matInput type=\"text\" [value]=\"value8\" [(ngModel)]=\"value8\">\n            <button mat-button *ngIf=\"value5\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value8=''\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4 mx-auto mt-3\">\n          <button mat-flat-button color=\"primary\" (click)=\"boxClicked(value8,'value8','description8')\">Show</button>\n        </div>\n      </div>\n      <h4 id=\"value8\"></h4>\n      <small class=\"value8\"></small>\n      <small class=\"description8\"></small>\n    </div>\n    <div class=\"col-sm p-2 m-2\" style=\"height: 200px; background-color: #C5CAE9;\" (click)=\"showDiv('div9')\">\n      <h3 id=\"hide9\">Click Here to watch Weather of your City..</h3>\n      <div class=\"row\" *ngIf=\"div9\">\n        <div class=\"col-sm-8\">\n          <mat-form-field class=\"example-form-field\">\n            <mat-label>Enter City</mat-label>\n            <input matInput type=\"text\" [value]=\"value9\" [(ngModel)]=\"value9\">\n            <button mat-button *ngIf=\"value9\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value9=''\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4 mx-auto mt-3\">\n          <button mat-flat-button color=\"primary\" (click)=\"boxClicked(value9,'value9','description9')\">Show</button>\n        </div>\n      </div>\n      <h4 id=\"value9\"></h4>\n      <small class=\"value9\"></small>\n      <small class=\"description9\"></small>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm = new FormGroup({\n    email: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required)\n  })\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  get email() { return this.loginForm.get('email') }\n\n  onSubmit(data) {\n    console.log(\"login-data:\", data);\n  }\n\n}\n","<!-- template driven form: -->\n\n<!-- <div class=\"col-sm-6 mx-auto m-2 p-2\" id=\"loginbackground\">\n  <h1>login</h1>\n  <form #userForm='ngForm' (ngSubmit)='onSubmit(userForm.value)'>\n    <div class=\"form-group\">\n      <label for=\"name\">Email address</label>\n      <input required #email=\"ngModel\" type=\"email\" ngModel email class=\"form-control\" name=\"username\">\n      <span class=\"red-error\" *ngIf=\"email.invalid && email.touched\">\n        email is not valid</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Password</label>\n      <input required minlength=\"5\" maxlength=\"8\" #password=\"ngModel\" type=\"password\" ngModel class=\"form-control\"\n        name=\"password\">\n      <span class=\"red-error\" *ngIf=\"password.invalid && password.touched\">\n        password is not valid</span>\n    </div>\n    <button type=\"submit\" [disabled]=\"userForm.invalid\" mat-flat-button color=\"primary\">login</button>\n  </form>\n</div> -->\n\n\n<h1 mat-dialog-title>Login</h1>\n<div mat-dialog-content>Allready have an Account?..Please Enter Your Credentials Below\n  <form #userForm='ngForm' (ngSubmit)='onSubmit(userForm.value)'>\n    <div class=\"form-group\">\n      <label for=\"name\">Email address</label>\n      <input required #email=\"ngModel\" type=\"email\" ngModel email class=\"form-control\" name=\"username\">\n      <span class=\"red-error\" *ngIf=\"email.invalid && email.touched\">\n        email is not valid</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Password</label>\n      <input required minlength=\"5\" maxlength=\"8\" #password=\"ngModel\" type=\"password\" ngModel class=\"form-control\"\n        name=\"password\">\n      <span class=\"red-error\" *ngIf=\"password.invalid && password.touched\">\n        password is not valid</span>\n    </div>\n  </form>\n</div>\n<div mat-dialog-actions>\n  <button type=\"submit\" [disabled]=\"userForm.invalid\" mat-flat-button color=\"primary\" mat-dialog-close\n    mat-dialog-close=\"true\">login</button>\n  <button mat-flat-button color=\"primary\" mat-dialog-close mat-dialog-close=\"false\">Close</button>\n</div>\n\n\n\n<!-- reactive form: -->\n\n<!-- <div class=\"col-sm-6 mx-auto m-2 p-2\" id=\"loginbackground\">\n  <h1>login</h1>\n  <form [formGroup]=\"loginForm\" (ngSubmit)='onSubmit(loginForm.value)'>\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">Email address</label>\n      <input type=\"email\" class=\"form-control\" formControlName=\"email\" aria-describedby=\"emailHelp\"\n        placeholder=\"Enter email\">\n      <span class=\"red-error\" *ngIf=\"email.invalid && email.touched\">Email feild is required</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">Password</label>\n      <input minlength=\"5\" maxlength=\"8\" type=\"password\" class=\"form-control\" formControlName=\"password\"\n        placeholder=\"password\">\n      <span class=\"red-error\" *ngIf=\"password.invalid && password.touched\">password is not valid</span>\n    </div>\n    <button type=\"submit\" [disabled]=\"loginForm.invalid\" mat-flat-button color=\"primary\">login</button>\n  </form>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<br>\n<br>\n<br>\n<h1>page-not-found</h1>\n","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onSubmit(data) {\n    console.log(\"data:\", data);\n  }\n\n}\n","<!-- template driven form: -->\n\n<h1 mat-dialog-title>Signup</h1>\n<div mat-dialog-content>New User? Want to Create Account?.. Please Enter your Details in Form Below.\n\n  <form #userForm='ngForm' (ngSubmit)='onSubmit(userForm.value)'>\n    <div class=\"form-group\">\n      <label for=\"name\">Email address</label>\n      <input required #email=\"ngModel\" type=\"email\" ngModel email class=\"form-control\" name=\"username\">\n      <span class=\"red-error\" *ngIf=\"email.invalid && email.touched\">\n        email is not valid</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Password</label>\n      <input required minlength=\"5\" maxlength=\"8\" #password=\"ngModel\" type=\"password\" ngModel class=\"form-control\"\n        name=\"password\">\n      <span class=\"red-error\" *ngIf=\"password.invalid && password.touched\">\n        password is not valid</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Mobile</label>\n      <input required minlength=\"10\" maxlength=\"12\" #mobile=\"ngModel\" type=\"mobile\" ngModel class=\"form-control\"\n        name=\"mobile\">\n      <span class=\"red-error\" *ngIf=\"mobile.invalid && mobile.touched\">\n        mobile number is not valid</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Address</label>\n      <input pattern=\"[a-zA-Z0-9\\s,. '-]*\" #Address=\"ngModel\" type=\"text\" ngModel class=\"form-control\" name=\"Address\">\n      <span class=\"red-error\" *ngIf=\"Address.invalid && Address.touched\">\n        address is not valid</span>\n    </div>\n  </form>\n\n</div>\n<div mat-dialog-actions>\n  <button type=\"submit\" [disabled]=\"userForm.invalid\" mat-flat-button color=\"primary\" mat-dialog-close\n    mat-dialog-close=\"true\">signup</button>\n  <button mat-flat-button color=\"primary\" mat-dialog-close mat-dialog-close=\"false\">Close</button>\n</div>\n\n<!-- <div class=\"col-sm-6 mx-auto m-2 p-2\" id=\"loginbackground\">\n  <h1>signup</h1>\n  <form #userForm='ngForm' (ngSubmit)='onSubmit(userForm.value)'>\n    <div class=\"form-group\">\n      <label for=\"name\">Email address</label>\n      <input required #email=\"ngModel\" type=\"email\" ngModel email class=\"form-control\" name=\"username\">\n      <span class=\"red-error\" *ngIf=\"email.invalid && email.touched\">\n        email is not valid</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Password</label>\n      <input required minlength=\"5\" maxlength=\"8\" #password=\"ngModel\" type=\"password\" ngModel class=\"form-control\"\n        name=\"password\">\n      <span class=\"red-error\" *ngIf=\"password.invalid && password.touched\">\n        password is not valid</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Mobile</label>\n      <input required minlength=\"10\" maxlength=\"12\" #mobile=\"ngModel\" type=\"mobile\" ngModel class=\"form-control\"\n        name=\"mobile\">\n      <span class=\"red-error\" *ngIf=\"mobile.invalid && mobile.touched\">\n        mobile number is not valid</span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Address</label>\n      <input pattern=\"[a-zA-Z0-9\\s,. '-]*\" #Address=\"ngModel\" type=\"text\" ngModel class=\"form-control\" name=\"Address\">\n      <span class=\"red-error\" *ngIf=\"Address.invalid && Address.touched\">\n        address is not valid</span>\n    </div>\n    <button type=\"submit\" [disabled]=\"userForm.invalid\" mat-flat-button color=\"primary\">signup</button>\n  </form>\n</div> -->\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getData() {\n    let url = \"https://api.openweathermap.org/data/2.5/weather?q=pune&appid=66e453fb77b0c0100e8fc74440c56668\";\n    // let url = \"https://jsonplaceholder.typicode.com/todos/\";\n    // console.log(\"url:\", url);\n    return this.http.get(url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}